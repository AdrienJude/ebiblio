/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package gesbibliothèque;

import classe.InsertUpdateDelete2;
import classe.Select;
import com.toedter.calendar.JDateChooser;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.*;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Adrien
 */
public class formLivre extends javax.swing.JInternalFrame {

    /**
     * Creates new form formLivre
     */
    String path2 = null;
    public static int photo1 = 0;

    public formLivre() {
        initComponents();
        actualiserTableau();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        ibl_photo = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        btnPicture = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtEdition = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        btnClear = new javax.swing.JButton();
        cmbType = new javax.swing.JComboBox<>();
        spiExemple = new javax.swing.JSpinner();
        dteEdition = new com.toedter.calendar.JDateChooser();
        jDesktopPane2 = new javax.swing.JDesktopPane();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        txtNom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTitre = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtAuteur = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtEditeur = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        txtExemplaire = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabLivre = new javax.swing.JTable();
        btnModifier = new javax.swing.JButton();
        btnSupprimer = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        lbPhoto = new javax.swing.JLabel();

        jDesktopPane1.setBackground(new java.awt.Color(255, 153, 51));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Photo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 1, 18))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ibl_photo, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ibl_photo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE)
        );

        btnAdd.setText("Ajouter Livre");
        btnAdd.setEnabled(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnPicture.setText("Importer image");
        btnPicture.setEnabled(false);
        btnPicture.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPictureActionPerformed(evt);
            }
        });

        btnNew.setText("Nouveau");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nom du livre :");

        jLabel4.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Type du livre :");

        jLabel5.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Auteur du livre :");

        jLabel6.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Editeur du livre :");

        jLabel7.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Date d'édition livre :");

        jLabel8.setFont(new java.awt.Font("Arial Rounded MT Bold", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Nombre d'exemplaire:");

        txtName.setEnabled(false);

        txtEdition.setEnabled(false);

        txtAuthor.setEnabled(false);

        btnClear.setText("Effacer ");
        btnClear.setEnabled(false);
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        cmbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Scientifique", "Litteraire", "Nouvelle", "Mythe", "Roman", "Manga" }));
        cmbType.setEnabled(false);

        spiExemple.setEnabled(false);

        dteEdition.setEnabled(false);

        jDesktopPane1.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnAdd, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnPicture, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnNew, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtName, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtEdition, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txtAuthor, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(btnClear, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(cmbType, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(spiExemple, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(dteEdition, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 771, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(321, 321, 321)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEdition, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spiExemple, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dteEdition, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(57, 57, 57)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(205, 205, 205))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtEdition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addComponent(dteEdition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                                .addComponent(spiExemple, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)))))
                .addGap(18, 18, 18)
                .addComponent(btnPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(132, 132, 132))
        );

        jTabbedPane1.addTab("Ajouter un livre", jDesktopPane1);

        jDesktopPane2.setBackground(new java.awt.Color(255, 153, 0));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Rechercher");

        btnSearch.setText("search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nom");

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Type");

        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Auteur");

        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Editeur");

        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Date Edition");

        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Nombre Exemplaire");

        tabLivre.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom", "Type", "Auteur", "Editeur", "Date Editition", "Nombre Exemplaire"
            }
        ));
        tabLivre.setEnabled(false);
        tabLivre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabLivreMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabLivre);

        btnModifier.setText("modifier");
        btnModifier.setEnabled(false);
        btnModifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierActionPerformed(evt);
            }
        });

        btnSupprimer.setText("Supprimer");
        btnSupprimer.setEnabled(false);
        btnSupprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Photo", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial Rounded MT Bold", 0, 18), new java.awt.Color(255, 102, 0))); // NOI18N

        lbPhoto.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
        );

        jDesktopPane2.setLayer(txtSearch, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(btnSearch, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(txtNom, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(txtTitre, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(txtAuteur, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(txtEditeur, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(txtDate, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(txtExemplaire, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(btnModifier, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(btnSupprimer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane2.setLayer(jPanel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane2Layout = new javax.swing.GroupLayout(jDesktopPane2);
        jDesktopPane2.setLayout(jDesktopPane2Layout);
        jDesktopPane2Layout.setHorizontalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                                .addGap(507, 507, 507)
                                .addComponent(btnModifier)
                                .addGap(137, 137, 137)
                                .addComponent(btnSupprimer))
                            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1255, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1)
                                .addGap(41, 41, 41)
                                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(btnSearch)
                                .addGap(156, 156, 156))
                            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel11))
                                .addGap(18, 18, 18)
                                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtEditeur, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(43, 43, 43)
                                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(64, 64, 64)
                                        .addComponent(txtTitre, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(39, 39, 39)
                                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel13))
                                .addGap(35, 35, 35)
                                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtAuteur, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtExemplaire, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)))
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jDesktopPane2Layout.setVerticalGroup(
            jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane2Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane2Layout.createSequentialGroup()
                        .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(btnSearch))
                        .addGap(125, 125, 125)
                        .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel9)
                            .addComponent(txtTitre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(txtAuteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(89, 89, 89)
                        .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtEditeur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtExemplaire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(jDesktopPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModifier, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSupprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Rechercher un livre", jDesktopPane2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 684, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        String nomLivre = txtName.getText().trim().toUpperCase();
        String auteurLivre = txtAuthor.getText().trim().toUpperCase();
        String editeurLivre = txtEdition.getText().trim().toUpperCase();
        String typeLibre = (String) cmbType.getSelectedItem();
        typeLibre = typeLibre.toUpperCase();
        Date date = dteEdition.getDate();
        //Date date = dteEdition.getDate();

        //java.sql.Date sqlDate = new java.sql.Date(date.getTime());
        int nbreExemple = (Integer) spiExemple.getValue();

        if (nomLivre == null || nomLivre.trim().isEmpty()
                || auteurLivre == null || auteurLivre.trim().isEmpty()
                || editeurLivre == null || editeurLivre.trim().isEmpty()
                || typeLibre == null || typeLibre.trim().isEmpty()
                || date == null
                || nbreExemple <= 0) {

            JOptionPane.showMessageDialog(null, "Veuillez remplir tous les champs !");
        } else {
            try {
                if (date == null) {
                    JOptionPane.showMessageDialog(null, "Veuillez sélectionner une date !");
                    return;
                }
                java.sql.Date sqlDate = new java.sql.Date(date.getTime());
                //Connection con = DatabaseConnection.getConnection(); // Assurez-vous d'avoir une connexion valide
                Class.forName("com.mysql.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bibliobd", "root", "");

                String query = "INSERT INTO livre (titre, auteur, editeur, dateEdition, type, nbExemplaire, picture) VALUES (?, ?, ?, ?, ?, ?, ?)";

                PreparedStatement pst = con.prepareStatement(query);
                pst.setString(1, nomLivre);
                pst.setString(2, auteurLivre);
                pst.setString(3, editeurLivre);
                pst.setDate(4, sqlDate); // Conversion correcte de la date
                pst.setString(5, typeLibre);
                pst.setInt(6, nbreExemple);

                if (path2 != null && !path2.isEmpty()) {
                    InputStream is = new FileInputStream(new File(path2));
                    pst.setBlob(7, is); // Insertion correcte de l'image
                } else {
                    pst.setNull(7, java.sql.Types.BLOB);
                }

                int rowsAffected = pst.executeUpdate();

                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(null, "Données enregistrées avec succès");
                    actualiserTableau();

                    // Réinitialiser les champs après insertion réussie
                    txtName.setText("");
                    txtAuthor.setText("");
                    txtEdition.setText("");
                    cmbType.setSelectedItem(null);
                    dteEdition.setDate(null);
                    spiExemple.setValue(0);
                    ibl_photo.setIcon(null);

                }

                pst.close();
                con.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erreur : " + e.getMessage());
            }

        }


    }//GEN-LAST:event_btnAddActionPerformed

    private void actualiserTableau() {

        ResultSet rs = Select.getData("SELECT * FROM livre order by titre");
        DefaultTableModel model = (DefaultTableModel) tabLivre.getModel();
        model.setRowCount(0);
        try {
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(2), rs.getString(6), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(7)});
            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }

    }
    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        txtAuthor.setEnabled(true);
        txtEdition.setEnabled(true);
        txtName.setEnabled(true);
        cmbType.setEnabled(true);
        dteEdition.setEnabled(true);
        spiExemple.setEnabled(true);
        btnPicture.setEnabled(true);
        btnAdd.setEnabled(true);
        btnClear.setEnabled(true);
        btnNew.setEnabled(false);
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnPictureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPictureActionPerformed
        // TODO add your handling code here:
        JFileChooser file = new JFileChooser();
        file.setFileSelectionMode(JFileChooser.FILES_ONLY);
        file.showOpenDialog(null);
        File select_file = file.getSelectedFile();
        String path = select_file.getAbsolutePath();
        try {
            BufferedImage convert_file = ImageIO.read(select_file);
            ImageIcon img = new ImageIcon(convert_file);
            Dimension dim = ibl_photo.getSize();
            Image imag = img.getImage().getScaledInstance(dim.width, dim.height, Image.SCALE_SMOOTH);
            // photo.removeAll();
            ibl_photo.setIcon(new ImageIcon(imag));
            path2 = path;
            ibl_photo.setVisible(true);
            photo1 = 1;

        } catch (IOException ex) {
            Logger.getLogger(formLivre.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPictureActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtName.setText("");
        txtAuthor.setText("");
        txtEdition.setText("");
        cmbType.setSelectedItem(null);
        dteEdition.setDate(null);
        spiExemple.setValue(0);
        ibl_photo.setIcon(null);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // Récupérer le texte recherché
        String search = txtSearch.getText().trim();
         if (search.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Veuillez entrer un titre ou un auteur !");
        return;
    }

        try {
            ResultSet rs = Select.getData("SELECT * FROM livre WHERE titre = '" + search + "' OR auteur ='" + search + "' OR type='" + search + "' ");
            DefaultTableModel model = (DefaultTableModel) tabLivre.getModel();

            // Vider le tableau avant d'ajouter les nouveaux résultats
            model.setRowCount(0);

            if (rs.next()) {
                do {
                    model.addRow(new Object[]{
                        rs.getString(2), rs.getString(6), rs.getString(3), rs.getString(4), rs.getString(5), rs.getString(7)
                    });
                } while (rs.next()); // Utilisation d'une boucle do-while pour parcourir le ResultSet

                tabLivre.setEnabled(true);
            } else {
                actualiserTableau();
                JOptionPane.showMessageDialog(null, "Livre introuvable");

            }
            rs.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur : " + e.getMessage());
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tabLivreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabLivreMouseClicked
        // TODO add your handling code here:
        //n'oublie pas d'activer les boutons
        btnModifier.setEnabled(true);
        btnSupprimer.setEnabled(true);
        //Attention 

        int selectedRow = tabLivre.getSelectedRow(); // Récupère la ligne sélectionnée

        if (selectedRow != -1) { // Vérifie qu'une ligne est bien sélectionnée
            String nomLivre = tabLivre.getValueAt(tabLivre.getSelectedRow(), 0).toString();
            String nomAuteur = tabLivre.getValueAt(tabLivre.getSelectedRow(), 2).toString();
           
            try {
                ResultSet rs = Select.getData("SELECT * FROM livre WHERE titre = '" + nomLivre + "' and auteur ='" + nomAuteur + "'");
                
                if (rs.next()) {
                    
                    txtNom.setText(rs.getString(2));
                    txtTitre.setText(rs.getString(6));
                    txtAuteur.setText(rs.getString(3));
                    txtDate.setText(rs.getString(5));
                    txtEditeur.setText(rs.getString(4));
                    txtExemplaire.setText(rs.getString(7));
                    byte[] imageData = rs.getBytes("picture"); // Récupérer les données de l'image
                    
                   if (imageData != null) {
                // Convertir les données en ImageIcon
                ImageIcon imageIcon = new ImageIcon(imageData);
                Image img = imageIcon.getImage();
                
                // Redimensionner l'image pour qu'elle s'affiche correctement
                Image resizedImg = img.getScaledInstance(lbPhoto.getWidth(), lbPhoto.getHeight(), Image.SCALE_SMOOTH);
                lbPhoto.setIcon(new ImageIcon(resizedImg));
            } else {
                JOptionPane.showMessageDialog(null, "Aucune image trouvée pour cet ID !");
                lbPhoto.setIcon(null); // Effacer l'image actuelle si aucune image trouvée
            }

                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
        }


    }//GEN-LAST:event_tabLivreMouseClicked

    private void btnSupprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabLivre.getSelectedRow(); // Récupère la ligne sélectionnée

        if (selectedRow != -1) { // Vérifie qu'une ligne est bien sélectionnée
            // Supposons que l'ID du livre est dans la première colonne du tableau
            String idLivre = "";
            String nomLivre = tabLivre.getValueAt(tabLivre.getSelectedRow(), 0).toString();
            String nomAuteur = tabLivre.getValueAt(tabLivre.getSelectedRow(), 2).toString();
            //int idLivre;
            try {
                ResultSet rs = Select.getData("SELECT idLivre FROM livre WHERE titre = '" + nomLivre + "' and auteur ='" + nomAuteur + "'");
                if (rs.next()) {
                    idLivre = rs.getString(1);
                } else {
                    JOptionPane.showMessageDialog(null, "Livre introuvable dans la base de donnée");
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }

            int confirmation = JOptionPane.showConfirmDialog(null,
                    "Voulez-vous vraiment supprimer ce livre ?",
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION);

            if (confirmation == JOptionPane.YES_OPTION) {
                try {
                    String query = "DELETE FROM livre WHERE idLivre = ?";
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bibliobd", "root", "");
                    System.out.println(idLivre);
                    PreparedStatement pst = con.prepareStatement(query);
                    pst.setString(1, idLivre);

                    int rowsAffected = pst.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Livre supprimé avec succès !");
                        txtNom.setText("");
                        txtTitre.setText("");
                        txtAuteur.setText("");
                        txtDate.setText("");
                        txtEditeur.setText("");
                        txtExemplaire.setText("");

                        // Supprimer la ligne du tableau après suppression
                        //DefaultTableModel model = (DefaultTableModel) tabLivre.getModel();
                        //model.removeRow(selectedRow);
                        actualiserTableau();
                    } else {
                        JOptionPane.showMessageDialog(null, "Échec de la suppression !");
                    }

                    pst.close();
                    con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erreur : " + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_btnSupprimerActionPerformed

    private void btnModifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierActionPerformed
        // TODO add your handling code here:
        int selectedRow = tabLivre.getSelectedRow(); // Récupère la ligne sélectionnée
        if (selectedRow != -1) {
            String idLivre = "";
            String nomLivre = tabLivre.getValueAt(tabLivre.getSelectedRow(), 0).toString();
            String nomAuteur = tabLivre.getValueAt(tabLivre.getSelectedRow(), 2).toString();
            String newNameLivre = txtNom.getText();
            String newTypeLivre = txtTitre.getText();
            String newAuteurLivre = txtAuteur.getText();
            String newDateLivrestr = txtDate.getText();
            java.sql.Date newDateLivre = java.sql.Date.valueOf(newDateLivrestr);
            String newEditeurLivre = txtEditeur.getText();
            int newExemplaire = Integer.parseInt(txtExemplaire.getText());
            //int idLivre;
            try {
                ResultSet rs = Select.getData("SELECT idLivre FROM livre WHERE titre = '" + nomLivre + "' and auteur ='" + nomAuteur + "'");
                if (rs.next()) {
                    idLivre = rs.getString(1);
                } else {
                    JOptionPane.showMessageDialog(null, "Livre introuvable dans la base de donnée");
                    return;
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }

            int confirmation = JOptionPane.showConfirmDialog(null,
                    "Voulez-vous vraiment modifier ce livre ?",
                    "Confirmation",
                    JOptionPane.YES_NO_OPTION);
            if (confirmation == JOptionPane.YES_OPTION) {
                try {
                    String query = "UPDATE livre SET titre=?, auteur=?, editeur=?, dateEdition=?,type=? , nbExemplaire=? WHERE idLivre=?";
                    Class.forName("com.mysql.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/bibliobd", "root", "");
                    System.out.println(idLivre);
                    PreparedStatement pst = con.prepareStatement(query);
                    pst.setString(1, newNameLivre);
                    pst.setString(2, newAuteurLivre);
                    pst.setString(3, newEditeurLivre);
                    pst.setDate(4, newDateLivre);
                    pst.setString(5, newTypeLivre);
                    pst.setInt(6, newExemplaire);
                    pst.setInt(7, Integer.parseInt(idLivre));
                    int rowsAffected = pst.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Livre modifié avec succès !");
                        txtNom.setText("");
                        txtTitre.setText("");
                        txtAuteur.setText("");
                        txtDate.setText("");
                        txtEditeur.setText("");
                        txtExemplaire.setText("");

                        // Supprimer la ligne du tableau après suppression
                        //DefaultTableModel model = (DefaultTableModel) tabLivre.getModel();
                        //model.removeRow(selectedRow);
                        actualiserTableau();
                    } else {
                        JOptionPane.showMessageDialog(null, "Échec de la modification !");
                    }

                    pst.close();
                    con.close();
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "Erreur : Le nombre d'exemplaires doit être un entier valide !");
                } catch (IllegalArgumentException e) {
                    JOptionPane.showMessageDialog(null, "Erreur : La date doit être au format YYYY-MM-DD !");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Erreur : " + e.getMessage());
                }
            }

        }
    }//GEN-LAST:event_btnModifierActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnModifier;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnPicture;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnSupprimer;
    private javax.swing.JComboBox<String> cmbType;
    private com.toedter.calendar.JDateChooser dteEdition;
    private javax.swing.JLabel ibl_photo;
    private javax.swing.JLabel ibl_photo1;
    private javax.swing.JLabel ibl_photo2;
    private javax.swing.JLabel ibl_photo3;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbPhoto;
    private javax.swing.JSpinner spiExemple;
    private javax.swing.JTable tabLivre;
    private javax.swing.JTextField txtAuteur;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtEditeur;
    private javax.swing.JTextField txtEdition;
    private javax.swing.JTextField txtExemplaire;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNom;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTitre;
    // End of variables declaration//GEN-END:variables
}
